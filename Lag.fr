

(*****************************************************************************************)

(* SM Lagrangian *)

(******************** Gauge F^2 Lagrangian terms*************************)

LGauge := Block[{mu,nu,ii,aa}, 
  ExpandIndices[-1/4 FS[B,mu,nu] FS[B,mu,nu] - 1/4 FS[Wi,mu,nu,ii] FS[Wi,mu,nu,ii] - 1/4 FS[G,mu,nu,aa] FS[G,mu,nu,aa], FlavorExpand->SU2W]];

(********************* Fermion Lagrangian terms*************************)

LFermions := Block[{mu}, 
  ExpandIndices[I*(
    QLbar.Ga[mu].DC[QL, mu] + LLbar.Ga[mu].DC[LL, mu] + uRbar.Ga[mu].DC[uR, mu] + dRbar.Ga[mu].DC[dR, mu] + lRbar.Ga[mu].DC[lR, mu]), 
  FlavorExpand->{SU2W,SU2D}]/.{CKM[a_,b_] Conjugate[CKM[a_,c_]]->IndexDelta[b,c], CKM[b_,a_] Conjugate[CKM[c_,a_]]->IndexDelta[b,c]}];
    
(**************Ghost terms**************************)

(* Now we need the ghost terms which are of the form:             *)
(* - g * antighost * d_BRST G                                     *)
(* where d_BRST G is BRST transform of the gauge fixing function. *)

LGhost := Block[{LGh1,LGhw,LGhs,LGhphi,mu, generators,gh,ghbar,Vectorize,phix11,phix12,phix21,phix22,togoldstones,doublet1,doublet10,doublet2,doublet20},
  (* Pure gauge piece *) 	
  LGh1 = -ghBbar.del[DC[ghB,mu],mu];
  LGhw = -ghWibar.del[DC[ghWi,mu],mu];
  LGhs = -ghGbar.del[DC[ghG,mu],mu];

  (* Scalar pieces: see Peskin pages 739-742 *)
  (* phix1 and phix2 are the real degrees of freedom of GP, Hc *)
  (* Vectorize transforms a doublet in a vector in the phi-basis, i.e. the basis of real degrees of freedom *)

  gh    = {ghB, ghWi[1], ghWi[2], ghWi[3]};
  ghbar = {ghBbar, ghWibar[1], ghWibar[2], ghWibar[3]};
  generators = {-I/2 g1 IdentityMatrix[2], -I/2 gw PauliSigma[1], -I/2 gw PauliSigma[2], -I/2 gw PauliSigma[3]};

  doublet1 = Expand[{(-I phix11 - phix12)/Sqrt[2], Phi1[2]} /. MR$Definitions /. vev1 -> 0]; 
  doublet10 = {0, vev1/Sqrt[2]};
  doublet2 = Expand[{(-I phix21 - phix22)/Sqrt[2], Phi2[2]} /. MR$Definitions /. vev2 -> 0]; 
  doublet20 = {0, vev2/Sqrt[2]};

  Vectorize[{a_, b_}]:= Simplify[{Sqrt[2] Re[Expand[a]], Sqrt[2] Im[Expand[a]], Sqrt[2] Re[Expand[b]], Sqrt[2] Im[Expand[b]]}/.{Im[_]->0, Re[num_]->num}];

  togoldstones := {phix11 -> -sb (Hc + Hcbar)/Sqrt[2] + cb (GP + GPbar)/Sqrt[2], phix12 -> -sb (Hc - Hcbar)/(I Sqrt[2]) + cb (GP - GPbar)/(I Sqrt[2]), phix21 -> sb (GP + GPbar)/Sqrt[2] + cb (Hc + Hcbar)/Sqrt[2], phix22 -> sb (-GP + GPbar)/(I Sqrt[2]) + cb (-Hc + Hcbar)/(I Sqrt[2])};

  LGhphi1=Plus@@Flatten[Table[-ghbar[[kkk]].gh[[lll]] Vectorize[generators[[kkk]].doublet10].Vectorize[generators[[lll]].(doublet1+doublet10)],{kkk,4},{lll,4}]] /.togoldstones;
  LGhphi2=Plus@@Flatten[Table[-ghbar[[kkk]].gh[[lll]] Vectorize[generators[[kkk]].doublet20].Vectorize[generators[[lll]].(doublet2+doublet20)],{kkk,4},{lll,4}]] /.togoldstones;

LGhphi = LGhphi1+LGhphi2;

ExpandIndices[ LGhs + If[FeynmanGauge, LGh1 + LGhw + LGhphi,0], FlavorExpand->SU2W]];

	
(***** Higgs sectors ******)
 
LHiggs := Block[{ii,mu, feynmangaugerules,V2HDM,LHiggsKin},
  feynmangaugerules = If[Not[FeynmanGauge], {G0|GP|GPbar ->0}, {}];  
  
  P11 := Module[{jj},Phi1bar[jj] Phi1[jj]];
  P12 := Module[{jj},Phi1bar[jj] Phi2[jj]];
  P21 := Module[{jj},Phi2bar[jj] Phi1[jj]];
  P22 := Module[{jj},Phi2bar[jj] Phi2[jj]];
  
  V2HDM := mu1*P11 +mu2*P22 -mu3*(P12 + P21) + l1/2.0*(P11*P11) + l2/2.0*(P22*P22) + l3*(P11*P22) + l4*P12*P21 + l5/2.0*(P12*P12 + P21*P21);
    
  LHiggsKin := DC[Phi1bar[ii],mu] DC[Phi1[ii],mu]+DC[Phi2bar[ii],mu] DC[Phi2[ii],mu];
 
  ExpandIndices[LHiggsKin - V2HDM, FlavorExpand->{SU2D,SU2W}]/.feynmangaugerules
 ];


LYukawa := Block[{sp,ii,jj,cc,ff1,ff2,ff3,yuk,yuk1,yuk2,feynmangaugerules},
  feynmangaugerules = If[Not[FeynmanGauge], {G0|GP|GPbar ->0}, {}];
 
  yuk1 = ExpandIndices[
    -yl[ff1, ff3] LLbar[sp, ii, ff1].lR [sp, ff3] Phi1[ii], FlavorExpand -> SU2D]; 
  yuk1 = yuk1 /. { CKM[a_, b_] Conjugate[CKM[a_, c_]] -> IndexDelta[b, c], CKM[b_, a_] Conjugate[CKM[c_, a_]] -> IndexDelta[b, c]};
 
  yuk2 = ExpandIndices[
   -GD[ff2, ff3] CKM[ff1, ff2] QLbar[sp, ii, ff1, cc].dR [sp, ff3, cc] Phi2[ii] - 
    GU[ff1, ff2] QLbar[sp, ii, ff1, cc].uR [sp, ff2, cc] Phi2bar[jj] Eps[ii, jj], FlavorExpand -> SU2D];
  yuk2 = yuk2 /. { CKM[a_, b_] Conjugate[CKM[a_, c_]] -> IndexDelta[b, c], CKM[b_, a_] Conjugate[CKM[c_, a_]] -> IndexDelta[b, c]};
  
  yuk=yuk1+yuk2;
  yuk+HC[yuk]/.feynmangaugerules
 ];
		
		
L2HDM := LGauge + LFermions + LHiggs + LYukawa + LGhost;
